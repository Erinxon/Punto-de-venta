//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Punto_de_venta.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<categoriaProductos> categoriaProductos { get; set; }
        public virtual DbSet<clientes> clientes { get; set; }
        public virtual DbSet<detalle_ventas> detalle_ventas { get; set; }
        public virtual DbSet<productos> productos { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<ventas> ventas { get; set; }
    
        public virtual int agregarClientes(string nombre, string apellido, string direccion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarClientes", nombreParameter, apellidoParameter, direccionParameter);
        }
    
        public virtual int agregarProductos(string nombre, Nullable<int> stock, Nullable<double> precioProducto, Nullable<int> idCategoria, Nullable<int> idProveedor)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var precioProductoParameter = precioProducto.HasValue ?
                new ObjectParameter("precioProducto", precioProducto) :
                new ObjectParameter("precioProducto", typeof(double));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarProductos", nombreParameter, stockParameter, precioProductoParameter, idCategoriaParameter, idProveedorParameter);
        }
    
        public virtual int agregarVentaProducto(Nullable<int> idventa, Nullable<int> idproducto, Nullable<int> canti, Nullable<double> precio)
        {
            var idventaParameter = idventa.HasValue ?
                new ObjectParameter("idventa", idventa) :
                new ObjectParameter("idventa", typeof(int));
    
            var idproductoParameter = idproducto.HasValue ?
                new ObjectParameter("idproducto", idproducto) :
                new ObjectParameter("idproducto", typeof(int));
    
            var cantiParameter = canti.HasValue ?
                new ObjectParameter("canti", canti) :
                new ObjectParameter("canti", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("precio", precio) :
                new ObjectParameter("precio", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("agregarVentaProducto", idventaParameter, idproductoParameter, cantiParameter, precioParameter);
        }
    
        public virtual int crearCategorias(string nombreCategoria)
        {
            var nombreCategoriaParameter = nombreCategoria != null ?
                new ObjectParameter("nombreCategoria", nombreCategoria) :
                new ObjectParameter("nombreCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearCategorias", nombreCategoriaParameter);
        }
    
        public virtual int crearUsuarios(string usuario, string nombre, string apellido, string pass)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("crearUsuarios", usuarioParameter, nombreParameter, apellidoParameter, passParameter);
        }
    
        public virtual int editarCategorias(Nullable<int> id, string nombreCategoria)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreCategoriaParameter = nombreCategoria != null ?
                new ObjectParameter("nombreCategoria", nombreCategoria) :
                new ObjectParameter("nombreCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarCategorias", idParameter, nombreCategoriaParameter);
        }
    
        public virtual int editarClientes(Nullable<int> idcliente, string nombre, string apellido, string direccion)
        {
            var idclienteParameter = idcliente.HasValue ?
                new ObjectParameter("idcliente", idcliente) :
                new ObjectParameter("idcliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("direccion", direccion) :
                new ObjectParameter("direccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarClientes", idclienteParameter, nombreParameter, apellidoParameter, direccionParameter);
        }
    
        public virtual int editarProductos(Nullable<int> id, string nombre, Nullable<int> stock, Nullable<double> precioProducto, Nullable<int> idCategoria, Nullable<int> idProveedor)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var precioProductoParameter = precioProducto.HasValue ?
                new ObjectParameter("precioProducto", precioProducto) :
                new ObjectParameter("precioProducto", typeof(double));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("idCategoria", idCategoria) :
                new ObjectParameter("idCategoria", typeof(int));
    
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("idProveedor", idProveedor) :
                new ObjectParameter("idProveedor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarProductos", idParameter, nombreParameter, stockParameter, precioProductoParameter, idCategoriaParameter, idProveedorParameter);
        }
    
        public virtual int editarUsuarios(Nullable<int> id, string usuario, string nombre, string apellido, string pass)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("apellido", apellido) :
                new ObjectParameter("apellido", typeof(string));
    
            var passParameter = pass != null ?
                new ObjectParameter("pass", pass) :
                new ObjectParameter("pass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("editarUsuarios", idParameter, usuarioParameter, nombreParameter, apellidoParameter, passParameter);
        }
    }
}
